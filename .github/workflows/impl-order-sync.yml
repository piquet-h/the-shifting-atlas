name: Implementation Order Sync

# Explicit permissions required:
# - repository-projects: write   -> needed to update GitHub Projects (Projects v2) fields via GraphQL in sync script
# - issues: write                -> label reconciliation / creation
# - contents: write              -> committing regenerated docs & JSON ordering file
# Keep the list tight (principle of least privilege).
permissions:
    contents: write
    issues: write
    repository-projects: write # Classic projects; Projects v2 still require PAT (classic) for user projects

on:
    workflow_dispatch:
        inputs:
            mode:
                description: 'Operation mode (validate|apply|resequence)'
                required: false
                default: 'apply'
    push:
        paths:
            - 'roadmap/implementation-order.json'
            - 'scripts/sync-implementation-order.mjs'
            - '.github/workflows/impl-order-sync.yml'
            - '.github/copilot-instructions.md'
    pull_request:
        paths:
            - 'roadmap/implementation-order.json'
            - 'scripts/sync-implementation-order.mjs'
            - '.github/workflows/impl-order-sync.yml'

jobs:
    sync:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Setup Node
              uses: actions/setup-node@v4
              with:
                  node-version: '20'

            - name: Install minimal deps
              run: npm ci --omit=dev || true

            - name: Select token (PROJECTS_TOKEN overrides GITHUB_TOKEN)
              id: select-token
              run: |
                  if [ -n "${{ secrets.PROJECTS_TOKEN }}" ]; then
                    echo "token=${{ secrets.PROJECTS_TOKEN }}" >> "$GITHUB_OUTPUT"
                    echo "Using PROJECTS_TOKEN secret (expected to have 'project' scope for Projects v2)."
                  else
                    echo "token=${{ secrets.GITHUB_TOKEN }}" >> "$GITHUB_OUTPUT"
                    echo "Falling back to default GITHUB_TOKEN (no user Project v2 write)."
                  fi

            - name: Run sync (auto-fix drift on push/main)
              id: run-sync
              env:
                  GITHUB_TOKEN: ${{ steps.select-token.outputs.token }}
                  ALLOW_MISSING_PROJECT: 'false'
              run: |
                  set -e
                  if [ "${{ github.event_name }}" = "push" ]; then
                    echo "Validate mode (auto-fix if needed)"
                    if node scripts/sync-implementation-order.mjs validate; then
                      echo "APPLY_PERFORMED=false" >> $GITHUB_ENV
                    else
                      echo "Drift detected; applying fix..."
                      node scripts/sync-implementation-order.mjs apply
                      echo "APPLY_PERFORMED=true" >> $GITHUB_ENV
                    fi
                  elif [ "${{ github.event_name }}" = "pull_request" ]; then
                    echo "Pull request context: validate only"
                    node scripts/sync-implementation-order.mjs validate
                    echo "APPLY_PERFORMED=false" >> $GITHUB_ENV
                  else
                    MODE="${{ github.event.inputs.mode }}"
                    echo "Manual dispatch mode: $MODE"
                    node scripts/sync-implementation-order.mjs "$MODE"
                    if [ "$MODE" = "apply" ] || [ "$MODE" = "resequence" ]; then
                      echo "APPLY_PERFORMED=true" >> $GITHUB_ENV
                    else
                      echo "APPLY_PERFORMED=false" >> $GITHUB_ENV
                    fi
                  fi

            - name: Ensure required type labels exist
              if: ${{ github.event_name != 'pull_request' }}
              env:
                  GITHUB_TOKEN: ${{ steps.select-token.outputs.token }}
              run: |
                  if [ -f scripts/sync-labels.mjs ]; then
                    echo "Syncing labels...";
                    node scripts/sync-labels.mjs;
                  else
                    echo "Label sync script missing, skipping.";
                  fi

            - name: Commit regenerated docs (when apply performed)
              if: env.APPLY_PERFORMED == 'true'
              env:
                  GITHUB_TOKEN: ${{ steps.select-token.outputs.token }}
              run: |
                  if git diff --quiet docs/roadmap.md roadmap/implementation-order.json; then
                    echo "No doc changes to commit."; exit 0; fi
                    git config user.name 'github-actions[bot]'
                    git config user.email 'github-actions[bot]@users.noreply.github.com'
                    git add docs/roadmap.md roadmap/implementation-order.json
                    git commit -m 'chore(roadmap): sync implementation order'
                    git push
