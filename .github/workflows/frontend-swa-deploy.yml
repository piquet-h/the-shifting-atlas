name: Frontend Static Web App Deploy

on:
  push:
    branches: [main]
    paths:
      - 'frontend/**'
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches: [main]
    paths:
      - 'frontend/**'
  workflow_dispatch:
    inputs:
      reason:
        description: 'Manual redeploy reason'
        required: false

permissions:
  id-token: write # OIDC for azure/login
  contents: read

concurrency:
  # Production deployments serialize; preview deployments get their own dynamic group.
  group: swa-frontend-${{ github.event_name == 'pull_request' && github.event.action != 'closed' && format('pr-{0}', github.event.pull_request.number) || 'prod' }}
  cancel-in-progress: true

env:
  NODE_VERSION: '20'
  # Repository Variables expected:
  #   AZURE_SUBSCRIPTION_ID, AZURE_RESOURCE_GROUP, SWA_NAME (optional; derived from last infra deployment output if absent)
  # Required Secrets:
  #   AZURE_CLIENT_ID, AZURE_TENANT_ID (OIDC federated credentials configured in Azure AD)

jobs:
  build-and-deploy-prod:
    name: Build & Deploy (Production)
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup workspace (composite)
        uses: ./.github/actions/node-workspace-setup

      - name: Build shared
        run: npm run build -w shared

      - name: Build frontend (Vite)
        run: npm run build -w frontend

      - name: Verify build artifact exists
        run: |
          if [ ! -d "frontend/dist" ]; then
            echo "::error title=Missing build artifact::Directory frontend/dist not found. Check prior build step output.";
            ls -R frontend || true
            exit 1
          fi

      - name: Resolve SWA Name
        id: swa_name
        run: |
          if [ -n "${{ vars.SWA_NAME }}" ]; then echo "SWA_NAME=${{ vars.SWA_NAME }}" >> $GITHUB_ENV; fi
          if [ -z "${{ vars.SWA_NAME }}" ]; then
            echo "::warning title=Missing SWA_NAME::Repository variable SWA_NAME not set. Deployment may fail if name required.";
          fi

      - name: Azure login (OIDC) for app settings
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Configure SWA AAD app settings (optional)
        env:
          SWA_NAME: ${{ env.SWA_NAME }}
          AAD_CLIENT_ID: ${{ secrets.CUSTOMER_CLIENT_ID || secrets.AZURE_CLIENT_ID }}
          AAD_TENANT_ID: ${{ secrets.CUSTOMER_TENANT_ID || secrets.AZURE_TENANT_ID }}
          AAD_CLIENT_SECRET: ${{ secrets.CUSTOMER_SECRET || secrets.AZURE_CLIENT_SECRET }}
        run: |
          set -euo pipefail
          if [ -z "${SWA_NAME:-}" ]; then
            echo "No SWA_NAME available; skipping app settings."; exit 0; fi
          kv_pairs=()
          [ -n "${AAD_CLIENT_ID}" ] && kv_pairs+=("AAD_CLIENT_ID=${AAD_CLIENT_ID}")
          [ -n "${AAD_TENANT_ID}" ] && kv_pairs+=("AAD_TENANT_ID=${AAD_TENANT_ID}")
            # Only set secret if provided (avoid empty overwrite)
          [ -n "${AAD_CLIENT_SECRET}" ] && kv_pairs+=("AAD_CLIENT_SECRET=${AAD_CLIENT_SECRET}")
          if [ ${#kv_pairs[@]} -eq 0 ]; then
            echo "No non-empty AAD settings to apply."; exit 0; fi
          echo "Applying ${#kv_pairs[@]} app settings to ${SWA_NAME}";
          az staticwebapp appsettings set --name "${SWA_NAME}" --setting-names "${kv_pairs[@]}"

      - name: Deploy to Azure Static Web Apps (Production)
        uses: Azure/static-web-apps-deploy@v1
        with:
          app_location: 'frontend'
          app_artifact_location: 'frontend/dist'
          skip_app_build: true
          skip_api_build: true
          production_branch: 'main'
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}

  build-and-deploy-preview:
    name: Build & Deploy (Preview)
    if: github.event_name == 'pull_request' && github.event.action != 'closed'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup workspace (composite)
        uses: ./.github/actions/node-workspace-setup

      - name: Build shared
        run: npm run build -w shared

      - name: Build frontend (Vite)
        run: npm run build -w frontend

      - name: Verify build artifact exists
        run: |
          if [ ! -d "frontend/dist" ]; then
            echo "::error title=Missing build artifact::Directory frontend/dist not found. Check prior build step output.";
            ls -R frontend || true
            exit 1
          fi

      - name: Deploy to Azure Static Web Apps (Preview)
        uses: Azure/static-web-apps-deploy@v1
        with:
          app_location: 'frontend'
          app_artifact_location: 'frontend/dist'
          skip_app_build: true
          skip_api_build: true
          production_branch: 'main'
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
        env:
          # Standard SWA action OIDC / API token resolution uses provided secrets.
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

  preview-cleanup:
    name: Cleanup Preview (PR Closed)
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Azure login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Resolve SWA Name
        run: |
          if [ -n "${{ vars.SWA_NAME }}" ]; then echo "SWA_NAME=${{ vars.SWA_NAME }}" >> $GITHUB_ENV; fi
          if [ -z "${{ vars.SWA_NAME }}" ]; then echo "::warning::SWA_NAME not set; cleanup may fail."; fi

      - name: Delete preview environment
        env:
          SWA_NAME: ${{ env.SWA_NAME || vars.SWA_NAME }}
        run: |
          set -euo pipefail
          if [ -z "${SWA_NAME:-}" ]; then echo "Skipping delete - no SWA_NAME"; exit 0; fi
          PREVIEW_ENV="pr-${{ github.event.pull_request.number }}"
          echo "Deleting preview environment ${PREVIEW_ENV} on ${SWA_NAME}";
          az staticwebapp environment delete \
            --name "${SWA_NAME}" \
            --environment-name "${PREVIEW_ENV}" \
            --yes || echo "Preview environment delete returned non-zero (may already be gone)."
